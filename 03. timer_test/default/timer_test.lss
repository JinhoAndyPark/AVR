
timer_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000136  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800100  00800100  000001aa  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  000001aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000043  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000b0  00000000  00000000  0000020d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000067  00000000  00000000  000002bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000000f5  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000040  00000000  00000000  0000041c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000088  00000000  00000000  0000045c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_15>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e3       	ldi	r30, 0x36	; 54
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a1 30       	cpi	r26, 0x01	; 1
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 96 00 	call	0x12c	; 0x12c <main>
  c6:	0c 94 99 00 	jmp	0x132	; 0x132 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__vector_15>:

unsigned char count=0;


ISR(TIMER0_COMP_vect)
{	
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	8f 93       	push	r24
	count++;
  da:	80 91 00 01 	lds	r24, 0x0100
  de:	8f 5f       	subi	r24, 0xFF	; 255
  e0:	80 93 00 01 	sts	0x0100, r24
	
	if(count==125)
  e4:	8d 37       	cpi	r24, 0x7D	; 125
  e6:	61 f4       	brne	.+24     	; 0x100 <__vector_15+0x32>
	{
		if(PORTC==0x00)
  e8:	85 b3       	in	r24, 0x15	; 21
  ea:	88 23       	and	r24, r24
  ec:	19 f4       	brne	.+6      	; 0xf4 <__vector_15+0x26>
		PORTC=0xff;
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	85 bb       	out	0x15, r24	; 21
  f2:	04 c0       	rjmp	.+8      	; 0xfc <__vector_15+0x2e>
		else if(PORTC==0xff)
  f4:	85 b3       	in	r24, 0x15	; 21
  f6:	8f 3f       	cpi	r24, 0xFF	; 255
  f8:	09 f4       	brne	.+2      	; 0xfc <__vector_15+0x2e>
		PORTC=0;
  fa:	15 ba       	out	0x15, r1	; 21
		count=0;
  fc:	10 92 00 01 	sts	0x0100, r1
	}
	TCNT0=125;              //
 100:	8d e7       	ldi	r24, 0x7D	; 125
 102:	82 bf       	out	0x32, r24	; 50

}
 104:	8f 91       	pop	r24
 106:	0f 90       	pop	r0
 108:	0f be       	out	0x3f, r0	; 63
 10a:	0f 90       	pop	r0
 10c:	1f 90       	pop	r1
 10e:	18 95       	reti

00000110 <main_init>:
}

void main_init(void)
{
	
	PORTC = 0xff;   //포트A값 초기화
 110:	9f ef       	ldi	r25, 0xFF	; 255
 112:	95 bb       	out	0x15, r25	; 21
	DDRC = 0xff;	//포트A 출력으로 설정
 114:	94 bb       	out	0x14, r25	; 20
	TCCR0 = 0x0f;  	//ctc mode,1024분주 설정(clkt=16000000/1024=15625Hz)
 116:	8f e0       	ldi	r24, 0x0F	; 15
 118:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 1;
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	82 bf       	out	0x32, r24	; 50
	OCR0 = 0xff ;   // 125  1/clkt0= 64us, 64us*125=8ms
 11e:	91 bf       	out	0x31, r25	; 49
	TIMSK = 0x02;   // compare interrupt enable
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	87 bf       	out	0x37, r24	; 55
	sbi(SREG,7);    // all interrupt enable
 124:	8f b7       	in	r24, 0x3f	; 63
 126:	80 68       	ori	r24, 0x80	; 128
 128:	8f bf       	out	0x3f, r24	; 63
}
 12a:	08 95       	ret

0000012c <main>:
	
void main_init(void);

int main(void)
{
	main_init();
 12c:	0e 94 88 00 	call	0x110	; 0x110 <main_init>
 130:	ff cf       	rjmp	.-2      	; 0x130 <main+0x4>

00000132 <_exit>:
 132:	f8 94       	cli

00000134 <__stop_program>:
 134:	ff cf       	rjmp	.-2      	; 0x134 <__stop_program>
