Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodqi4.o)
                              main.o (__udivmodqi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodsi4.o)
                              uart.o (__udivmodsi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
LOAD main.o
LOAD adc.o
LOAD timer.o
LOAD uart.o
LOAD motor_step.o
LOAD ext_interrupt.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x156c
 *(.vectors)
 .vectors       0x00000000       0x8c c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_31
                0x000000ca                __vector_23
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_27
                0x000000ca                __vector_33
                0x000000ca                __vector_9
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_20
 .text          0x000000ce      0x9fe main.o
                0x000000ce                __vector_18
                0x000000fa                __vector_30
                0x000001a8                __vector_16
                0x000001f2                Main_Init
                0x00000238                Compare_Dis
                0x0000025a                Data_to_PC
                0x0000027a                Filter
                0x00000300                main
 .text          0x00000acc       0xdc adc.o
                0x00000acc                Read_ADC
                0x00000ae2                Read_ADC_NOSTOP
                0x00000af6                ADC_Average
                0x00000b94                Init_ADC
 .text          0x00000ba8       0x4a timer.o
                0x00000ba8                Init_Timer0
                0x00000bb8                Init_Timer
                0x00000bbe                Init_Timer1
                0x00000bce                Init_Timer2
                0x00000bda                Init_Timer3
 .text          0x00000bf2      0x4a8 uart.o
                0x00000bf2                Init_Uart
                0x00000c68                Uart_Getch
                0x00000c8c                Uart_Putch
                0x00000cac                Uart_Print
                0x00000cf8                Uart_U08Bit_PutNum
                0x00000d56                Uart_U08Bit_PutNum_Substance
                0x00000dba                Uart_U10Bit_PutNum
                0x00000e30                Uart_U10Bit_PutNum3
                0x00000e92                Uart_U16Bit_PutNum
                0x00000e98                Uart_U16Bit_PutNum_Substance
                0x00000f8a                Uart_ByteToHexPutch
                0x00001002                Uart_WordToHexPutch
 .text          0x0000109a      0x216 motor_step.o
                0x0000109a                Motor_Init
                0x000010a8                X_StepMotor_Move_1step
                0x000010be                Y_StepMotor_Move_1step
                0x000010d4                X_Move_Startpoint
                0x0000116c                Y_Move_Startpoint
                0x00001194                X_Move_deg
                0x000011fe                Y_Move_Simple
                0x0000124e                Lets_Do_FirstStep
 .text          0x000012b0      0x234 ext_interrupt.o
                0x000012b0                Init_Ext_Interrupt
                0x000013b8                __vector_1
                0x000013e2                __vector_2
                0x0000140c                __vector_3
                0x00001430                __vector_4
                0x00001454                __vector_5
                0x00001478                __vector_6
                0x0000149c                __vector_7
                0x000014c0                __vector_8
 .text          0x000014e4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodqi4.o)
 .text          0x000014e4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodhi4.o)
 .text          0x000014e4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodsi4.o)
 .text          0x000014e4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
 .text          0x000014e4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_copy_data.o)
 .text          0x000014e4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_clear_bss.o)
                0x000014e4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000014e4       0x18 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodqi4.o)
                0x000014e4                __udivmodqi4
 .text.libgcc   0x000014fc       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodhi4.o)
                0x000014fc                __udivmodhi4
 .text.libgcc   0x00001524       0x44 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodsi4.o)
                0x00001524                __udivmodsi4
 .text.libgcc   0x00001568        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00001568        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001568        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_clear_bss.o)
                0x00001568                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001568        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
                0x00001568                _exit
                0x00001568                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001568        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x0000156c                _etext = .

.data           0x00800100       0xc8 load address 0x0000156c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100       0xa7 main.o
                0x00800100                SIG_To2
                0x00800112                str1
                0x00800121                str2
                0x00800131                str3
                0x00800144                str4
                0x00800158                str5
                0x00800167                str6
                0x00800175                str8
                0x00800183                str9
                0x00800195                str10
                0x008001a5                str11
 .data          0x008001a7        0x0 adc.o
 .data          0x008001a7        0x0 timer.o
 .data          0x008001a7       0x20 uart.o
 .data          0x008001c7        0x0 motor_step.o
 .data          0x008001c7        0x0 ext_interrupt.o
 .data          0x008001c7        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodqi4.o)
 .data          0x008001c7        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodhi4.o)
 .data          0x008001c7        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodsi4.o)
 .data          0x008001c7        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
 .data          0x008001c7        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_copy_data.o)
 .data          0x008001c7        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008001c8                . = ALIGN (0x2)
 *fill*         0x008001c7        0x1 00
                0x008001c8                _edata = .
                0x008001c8                PROVIDE (__data_end, .)

.bss            0x008001c8      0x37a
                0x008001c8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008001c8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 .bss           0x008001c8      0x37a main.o
                0x008001c8                BREAK_NUM0
                0x008001c9                BREAK_NUM1
                0x008001ca                Instruction
                0x008001cf                Instruction2
                0x008001d0                SENSING_CW
                0x00800374                Filtering
                0x00800504                WRONG_SIG
                0x00800505                Dis
                0x00800507                Fisrtpoint_Flag
                0x00800508                op_cnt
                0x0080050a                result_op_cnt
                0x0080050b                Height
                0x0080050d                Percent
                0x0080051c                Percent10
                0x0080052b                Percent1
                0x0080053a                arr
 .bss           0x00800542        0x0 adc.o
 .bss           0x00800542        0x0 timer.o
 .bss           0x00800542        0x0 uart.o
 .bss           0x00800542        0x0 motor_step.o
 .bss           0x00800542        0x0 ext_interrupt.o
 .bss           0x00800542        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodqi4.o)
 .bss           0x00800542        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodhi4.o)
 .bss           0x00800542        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_udivmodsi4.o)
 .bss           0x00800542        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
 .bss           0x00800542        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_copy_data.o)
 .bss           0x00800542        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800542                PROVIDE (__bss_end, .)
                0x0000156c                __data_load_start = LOADADDR (.data)
                0x00001634                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800542        0x0
                0x00800542                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800542                PROVIDE (__noinit_end, .)
                0x00800542                _end = .
                0x00800542                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 adc.o
 .debug_aranges
                0x00000040       0x20 timer.o
 .debug_aranges
                0x00000060       0x20 uart.o
 .debug_aranges
                0x00000080       0x20 motor_step.o
 .debug_aranges
                0x000000a0       0x20 ext_interrupt.o

.debug_pubnames
                0x00000000      0x4f0
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x1c8 main.o
 .debug_pubnames
                0x000001c8       0x50 adc.o
 .debug_pubnames
                0x00000218       0x61 timer.o
 .debug_pubnames
                0x00000279      0x11c uart.o
 .debug_pubnames
                0x00000395       0xba motor_step.o
 .debug_pubnames
                0x0000044f       0xa1 ext_interrupt.o

.debug_info     0x00000000     0x1ea0
 *(.debug_info)
 .debug_info    0x00000000      0xfed main.o
 .debug_info    0x00000fed      0x18a adc.o
 .debug_info    0x00001177       0xdd timer.o
 .debug_info    0x00001254      0x445 uart.o
 .debug_info    0x00001699      0x68e motor_step.o
 .debug_info    0x00001d27      0x179 ext_interrupt.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x75d
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x27e main.o
 .debug_abbrev  0x0000027e       0xd9 adc.o
 .debug_abbrev  0x00000357       0x4c timer.o
 .debug_abbrev  0x000003a3      0x15c uart.o
 .debug_abbrev  0x000004ff      0x1ce motor_step.o
 .debug_abbrev  0x000006cd       0x90 ext_interrupt.o

.debug_line     0x00000000     0x19df
 *(.debug_line)
 .debug_line    0x00000000      0x9c1 main.o
 .debug_line    0x000009c1      0x1ef adc.o
 .debug_line    0x00000bb0      0x17f timer.o
 .debug_line    0x00000d2f      0x4d8 uart.o
 .debug_line    0x00001207      0x487 motor_step.o
 .debug_line    0x0000168e      0x351 ext_interrupt.o

.debug_frame    0x00000000      0x340
 *(.debug_frame)
 .debug_frame   0x00000000       0x90 main.o
 .debug_frame   0x00000090       0x50 adc.o
 .debug_frame   0x000000e0       0x60 timer.o
 .debug_frame   0x00000140       0xd0 uart.o
 .debug_frame   0x00000210       0x90 motor_step.o
 .debug_frame   0x000002a0       0xa0 ext_interrupt.o

.debug_str      0x00000000      0x5a3
 *(.debug_str)
 .debug_str     0x00000000      0x2b1 main.o
                                0x2ec (size before relaxing)
 .debug_str     0x000002b1       0x62 adc.o
                                0x102 (size before relaxing)
 .debug_str     0x00000313       0x4d timer.o
                                 0xed (size before relaxing)
 .debug_str     0x00000360      0x186 uart.o
                                0x222 (size before relaxing)
 .debug_str     0x000004e6       0x38 motor_step.o
                                0x1f4 (size before relaxing)
 .debug_str     0x0000051e       0x85 ext_interrupt.o
                                0x132 (size before relaxing)

.debug_loc      0x00000000     0x11c4
 *(.debug_loc)
 .debug_loc     0x00000000      0x8c4 main.o
 .debug_loc     0x000008c4      0x119 adc.o
 .debug_loc     0x000009dd      0x3ed uart.o
 .debug_loc     0x00000dca      0x39a motor_step.o
 .debug_loc     0x00001164       0x60 ext_interrupt.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(3D_Scanner.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000      0x15a
 .debug_pubtypes
                0x00000000       0x50 main.o
 .debug_pubtypes
                0x00000050       0x3b adc.o
 .debug_pubtypes
                0x0000008b       0x2b timer.o
 .debug_pubtypes
                0x000000b6       0x36 uart.o
 .debug_pubtypes
                0x000000ec       0x48 motor_step.o
 .debug_pubtypes
                0x00000134       0x26 ext_interrupt.o

.debug_ranges   0x00000000      0x178
 .debug_ranges  0x00000000      0x118 main.o
 .debug_ranges  0x00000118       0x60 motor_step.o
